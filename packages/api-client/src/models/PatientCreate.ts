/* tslint:disable */
/* eslint-disable */
/**
 * densys
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface PatientCreate
 */
export interface PatientCreate {
  /**
   *
   * @type {number}
   * @memberof PatientCreate
   */
  iin: number;
  /**
   *
   * @type {string}
   * @memberof PatientCreate
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof PatientCreate
   */
  surname: string;
  /**
   *
   * @type {string}
   * @memberof PatientCreate
   */
  middle_name: string;
  /**
   *
   * @type {string}
   * @memberof PatientCreate
   */
  contact_number: string;
  /**
   *
   * @type {Date}
   * @memberof PatientCreate
   */
  day_of_birth: Date;
  /**
   *
   * @type {string}
   * @memberof PatientCreate
   */
  blood_group: string;
  /**
   *
   * @type {string}
   * @memberof PatientCreate
   */
  emergency_contact_number: string;
  /**
   *
   * @type {string}
   * @memberof PatientCreate
   */
  email?: string;
  /**
   *
   * @type {string}
   * @memberof PatientCreate
   */
  address: string;
  /**
   *
   * @type {boolean}
   * @memberof PatientCreate
   */
  marital_status?: boolean;
  /**
   *
   * @type {string}
   * @memberof PatientCreate
   */
  government_id: string;
  /**
   *
   * @type {Date}
   * @memberof PatientCreate
   */
  registration_date?: Date;
  /**
   *
   * @type {string}
   * @memberof PatientCreate
   */
  password: string;
  /**
   *
   * @type {string}
   * @memberof PatientCreate
   */
  access_token: string;
}

/**
 * Check if a given object implements the PatientCreate interface.
 */
export function instanceOfPatientCreate(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && "iin" in value;
  isInstance = isInstance && "name" in value;
  isInstance = isInstance && "surname" in value;
  isInstance = isInstance && "middle_name" in value;
  isInstance = isInstance && "contact_number" in value;
  isInstance = isInstance && "day_of_birth" in value;
  isInstance = isInstance && "blood_group" in value;
  isInstance = isInstance && "emergency_contact_number" in value;
  isInstance = isInstance && "address" in value;
  isInstance = isInstance && "government_id" in value;
  isInstance = isInstance && "password" in value;
  isInstance = isInstance && "access_token" in value;

  return isInstance;
}

export function PatientCreateFromJSON(json: any): PatientCreate {
  return PatientCreateFromJSONTyped(json, false);
}

export function PatientCreateFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): PatientCreate {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    iin: json["iin"],
    name: json["name"],
    surname: json["surname"],
    middle_name: json["middle_name"],
    contact_number: json["contact_number"],
    day_of_birth: new Date(json["day_of_birth"]),
    blood_group: json["blood_group"],
    emergency_contact_number: json["emergency_contact_number"],
    email: !exists(json, "email") ? undefined : json["email"],
    address: json["address"],
    marital_status: !exists(json, "marital_status")
      ? undefined
      : json["marital_status"],
    government_id: json["government_id"],
    registration_date: !exists(json, "registration_date")
      ? undefined
      : new Date(json["registration_date"]),
    password: json["password"],
    access_token: json["access_token"],
  };
}

export function PatientCreateToJSON(value?: PatientCreate | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    iin: value.iin,
    name: value.name,
    surname: value.surname,
    middle_name: value.middle_name,
    contact_number: value.contact_number,
    day_of_birth: value.day_of_birth.toISOString().substr(0, 10),
    blood_group: value.blood_group,
    emergency_contact_number: value.emergency_contact_number,
    email: value.email,
    address: value.address,
    marital_status: value.marital_status,
    government_id: value.government_id,
    registration_date:
      value.registration_date === undefined
        ? undefined
        : value.registration_date.toISOString().substr(0, 10),
    password: value.password,
    access_token: value.access_token,
  };
}
