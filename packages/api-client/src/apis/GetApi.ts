/* tslint:disable */
/* eslint-disable */
/**
 * densys
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime";
import type { Department, Schedule } from "../models";
import {
  DepartmentFromJSON,
  DepartmentToJSON,
  ScheduleFromJSON,
  ScheduleToJSON,
} from "../models";

/**
 *
 */
export class GetApi extends runtime.BaseAPI {
  /**
   * Get list of departments
   * Get Departments List
   */
  async getDepartmentsRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<Array<Department>>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/users/get_departments`,
        method: "GET",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      jsonValue.map(DepartmentFromJSON)
    );
  }

  /**
   * Get list of departments
   * Get Departments List
   */
  async getDepartments(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<Array<Department>> {
    const response = await this.getDepartmentsRaw(initOverrides);
    return await response.value();
  }

  /**
   * Get list of schedules
   * Get Chedules List
   */
  async getSchedulesRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<Array<Schedule>>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/users/get_schedules`,
        method: "GET",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      jsonValue.map(ScheduleFromJSON)
    );
  }

  /**
   * Get list of schedules
   * Get Chedules List
   */
  async getSchedules(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<Array<Schedule>> {
    const response = await this.getSchedulesRaw(initOverrides);
    return await response.value();
  }

  /**
   * Get list of specialisations
   * Get Specialisations List
   */
  async getSpecialisationsRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<Array<Department>>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/users/get_specialisations`,
        method: "GET",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      jsonValue.map(DepartmentFromJSON)
    );
  }

  /**
   * Get list of specialisations
   * Get Specialisations List
   */
  async getSpecialisations(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<Array<Department>> {
    const response = await this.getSpecialisationsRaw(initOverrides);
    return await response.value();
  }
}
