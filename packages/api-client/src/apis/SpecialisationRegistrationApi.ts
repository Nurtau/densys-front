/* tslint:disable */
/* eslint-disable */
/**
 * densys
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  HTTPValidationError,
  Specialisation,
} from '../models';
import {
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
    SpecialisationFromJSON,
    SpecialisationToJSON,
} from '../models';

export interface CreateSpecialisationRequest {
    specialisation: Specialisation;
}

/**
 * 
 */
export class SpecialisationRegistrationApi extends runtime.BaseAPI {

    /**
     * Register new spec
     * Department Create
     */
    async createSpecialisationRaw(requestParameters: CreateSpecialisationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Specialisation>> {
        if (requestParameters.specialisation === null || requestParameters.specialisation === undefined) {
            throw new runtime.RequiredError('specialisation','Required parameter requestParameters.specialisation was null or undefined when calling createSpecialisation.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/users/create_specialisation`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SpecialisationToJSON(requestParameters.specialisation),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SpecialisationFromJSON(jsonValue));
    }

    /**
     * Register new spec
     * Department Create
     */
    async createSpecialisation(requestParameters: CreateSpecialisationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Specialisation> {
        const response = await this.createSpecialisationRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
