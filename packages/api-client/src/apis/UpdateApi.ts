/* tslint:disable */
/* eslint-disable */
/**
 * densys
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  DoctorCreate,
  DoctorInDB,
  HTTPValidationError,
  PatientCreate,
  PatientInDB,
} from '../models';
import {
    DoctorCreateFromJSON,
    DoctorCreateToJSON,
    DoctorInDBFromJSON,
    DoctorInDBToJSON,
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
    PatientCreateFromJSON,
    PatientCreateToJSON,
    PatientInDBFromJSON,
    PatientInDBToJSON,
} from '../models';

export interface UpdateDoctorRequest {
    doctorCreate: DoctorCreate;
}

export interface UpdatePatientRequest {
    patientCreate: PatientCreate;
}

/**
 * 
 */
export class UpdateApi extends runtime.BaseAPI {

    /**
     * Update doctor details
     * Update Doctor
     */
    async updateDoctorRaw(requestParameters: UpdateDoctorRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DoctorInDB>> {
        if (requestParameters.doctorCreate === null || requestParameters.doctorCreate === undefined) {
            throw new runtime.RequiredError('doctorCreate','Required parameter requestParameters.doctorCreate was null or undefined when calling updateDoctor.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/users/update_doctor`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: DoctorCreateToJSON(requestParameters.doctorCreate),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DoctorInDBFromJSON(jsonValue));
    }

    /**
     * Update doctor details
     * Update Doctor
     */
    async updateDoctor(requestParameters: UpdateDoctorRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DoctorInDB> {
        const response = await this.updateDoctorRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Update patient details
     * Update Patient
     */
    async updatePatientRaw(requestParameters: UpdatePatientRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PatientInDB>> {
        if (requestParameters.patientCreate === null || requestParameters.patientCreate === undefined) {
            throw new runtime.RequiredError('patientCreate','Required parameter requestParameters.patientCreate was null or undefined when calling updatePatient.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/users/update_patient`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: PatientCreateToJSON(requestParameters.patientCreate),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PatientInDBFromJSON(jsonValue));
    }

    /**
     * Update patient details
     * Update Patient
     */
    async updatePatient(requestParameters: UpdatePatientRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PatientInDB> {
        const response = await this.updatePatientRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
