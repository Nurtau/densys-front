/* tslint:disable */
/* eslint-disable */
/**
 * densys
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime";
import type { Department, HTTPValidationError } from "../models";
import {
  DepartmentFromJSON,
  DepartmentToJSON,
  HTTPValidationErrorFromJSON,
  HTTPValidationErrorToJSON,
} from "../models";

export interface CreateDepartmentRequest {
  department: Department;
}

/**
 *
 */
export class DepartmentRegistrationApi extends runtime.BaseAPI {
  /**
   * Register new department
   * Department Create
   */
  async createDepartmentRaw(
    requestParameters: CreateDepartmentRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<Department>> {
    if (
      requestParameters.department === null ||
      requestParameters.department === undefined
    ) {
      throw new runtime.RequiredError(
        "department",
        "Required parameter requestParameters.department was null or undefined when calling createDepartment."
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters["Content-Type"] = "application/json";

    const response = await this.request(
      {
        path: `/users/create_department`,
        method: "POST",
        headers: headerParameters,
        query: queryParameters,
        body: DepartmentToJSON(requestParameters.department),
      },
      initOverrides
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      DepartmentFromJSON(jsonValue)
    );
  }

  /**
   * Register new department
   * Department Create
   */
  async createDepartment(
    requestParameters: CreateDepartmentRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<Department> {
    const response = await this.createDepartmentRaw(
      requestParameters,
      initOverrides
    );
    return await response.value();
  }
}
